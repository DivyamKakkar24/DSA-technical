// Given the root of a binary tree, return all root-to-leaf paths in any order.

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def paths(self, root, s, ans):
        if root.left == None and root.right == None: 
            ans.append(s + str(root.val))
            return
        
        if root.left:
            self.paths(root.left, s + str(root.val) + '->', ans)
        
        if root.right:
            self.paths(root.right, s + str(root.val) + '->', ans)
        
    
    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:
        ans = []
        
        self.paths(root, "", ans)
        
        return ans