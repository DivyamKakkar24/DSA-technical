// Validate Binary Search Tree

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def recur(self, node, left, right):
        if node == None:
            return True
        
        if node.val <= left or node.val >= right:
            return False
        
        A = self.recur(node.left, left, node.val)
        B = self.recur(node.right, node.val, right)
        
        return (A and B)
        
    
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
        left = float('-inf')
        right = float('inf')
        
        return self.recur(root, left, right)
        