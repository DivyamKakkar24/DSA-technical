// Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def hasSum(self, root, targetSum):
        if root == None:
            return False
        
        if root.left == None and root.right == None and targetSum - root.val == 0:
            return True
        
        return (self.hasSum(root.left, targetSum - root.val) or self.hasSum(root.right, targetSum - root.val))
    
    
    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:
        ans = self.hasSum(root, targetSum)
        
        return ans