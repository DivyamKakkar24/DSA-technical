// Given the root of a binary tree, return the length of the diameter of the tree.
// The diameter of a binary tree is the length of the longest path between any two nodes in a tree. 
// This path may or may not pass through the root.

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        diameter = 0
        
        def findHeight(root):
            nonlocal diameter
            if root == None:
                return 0
            
            left = findHeight(root.left)
            right = findHeight(root.right)
            
            diameter = max(diameter, left + right)
            
            return max(left, right) + 1
            
        findHeight(root)
        
        return diameter
        