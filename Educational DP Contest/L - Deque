#include <bits/stdc++.h>
using namespace std;

long long DP[3000 + 1][3000 + 1];

long long play(int i, int j, vector<int>& A){
    if (j < i)
        return 0;

    if(DP[i][j] != -1)
        return DP[i][j];

    DP[i][j] = max(A[i] - play(i + 1, j, A), A[j] - play(i, j - 1, A));

    return DP[i][j];
}


int main(){
    int n;
    cin >> n;

    vector<int> A(n);
    long long net = 0;

    for(int i = 0; i < n; i++){
        cin >> A[i];
    }

    memset(DP, -1, sizeof(DP));

    long long ans = play(0, n - 1, A);

    cout << ans;

    return 0; 
}

