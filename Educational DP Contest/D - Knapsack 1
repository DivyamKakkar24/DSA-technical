import collections
from math import ceil, gcd, sqrt, log

INF = float('inf')
mod = 1000000007



def solve():
    n, W = map(int, input().split())

    Weight = []
    Profit = []

    for i in range(n):
        w, v = map(int, input().split())
        Weight.append(w)
        Profit.append(v)

    dp = [[0] * (W + 1) for i in range(n + 1)]

    for i in range(1, n + 1):
        for j in range(1, W + 1):
            if Weight[i - 1] > j:
                dp[i][j] = dp[i - 1][j]
            else:
                dp[i][j] = max(Profit[i - 1] + dp[i - 1][j - Weight[i - 1]], dp[i - 1][j])

    print(dp[n][W])


t = 1

while t != 0:
    solve()

    t -= 1
    